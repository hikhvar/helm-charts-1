{{- if and (and .Values.ingress.enabled .Values.ingress.extra) (not .Values.ingress.istio.enabled) }}
{{- range $name, $extra := .Values.ingress.extra }}
{{- $class := $extra.class | default $.Values.ingress.class }}
{{ $timeout := $extra.timeoutSeconds | default $.Values.ingress.timeoutSeconds }}
{{- if and $extra.domains (or $class (and (not $extra.gateway) (not $.Values.ingress.gateway.name))) }}

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "generic-service.fullname" $ }}-{{ $name }}
  labels: {{- include "generic-service.default-labels" $ | nindent 4 }}
  annotations:
  {{- $merged := deepCopy ($.Values.ingress.annotations | default dict) | mustMerge ($extra.annotations | default dict) }}
  {{- range $mname, $mvalue := $merged }}
    {{- if ne $mvalue "nil" }}
      {{- dict $mname $mvalue | toYaml | nindent 4 }}
    {{- end }}
  {{- end }}
  {{- if eq $class "nginx" }}
    {{- $protocol := $.Values.ingress.protocol }}
    {{- if $extra.port }}{{ $protocol = $extra.protocol }}{{ end }}
    nginx.ingress.kubernetes.io/backend-protocol: {{ include "generic-service.normalize-protocol" $protocol | upper }}
    {{- if or $extra.timeoutSeconds $.Values.ingress.timeoutSeconds }}
    nginx.ingress.kubernetes.io/proxy-read-timeout: '{{ $timeout }}'
    {{- if or (eq $protocol "grpc") (eq $protocol "grpcs") }}
    nginx.ingress.kubernetes.io/server-snippet: "grpc_read_timeout {{ $timeout }}s; {{ get $merged "nginx.ingress.kubernetes.io/server-snippet" }}"
    {{- end }}
    {{- end }}
  {{- end }}
  {{- if eq $class "contour" }}
    {{- if $timeout }}
    projectcontour.io/response-timeout: '{{ if eq (int $timeout) -1 }}infinity{{ else }}{{ $timeout }}s{{ end }}'
    {{- end }}
    {{- if and $extra.tls (and $extra.tls.enabled $extra.tls.secretNamespace) }}
    projectcontour.io/tls-cert-namespace: {{ $extra.tls.secretNamespace }}
    {{- end }}
  {{- end }}

spec:
  {{- if $class }}
  ingressClassName: {{ $class }}
  {{- end }}

  {{- if $extra.tls }}{{ if $extra.tls.enabled }}
  tls:
    - secretName: {{ $extra.tls.secret | default (printf "%s-%s-tls" $.Release.Name $name) }}
      hosts: {{- $extra.domains | toYaml | nindent 8 }}
  {{- end }}{{ end }}

  rules:
    {{- range $extra.domains }}
    - host: {{ tpl . $ | quote }}
      http:
        paths:
          {{- range ($extra.paths | default (list "/")) }}
          - pathType: Prefix
            path: {{ . | quote }}
            backend:
              service:
                name: {{ include "generic-service.fullname" $ }}
                port:
                {{- if $extra.port }}
                  name: {{ include "generic-service.normalize-protocol" $extra.protocol }}-{{ $name }}
                {{- else }}
                  {{- if $extra.protocol }}
                    {{ fail "ingress.extra.*.protocol may not be set if ingress.extra.*.port is not set" }}
                  {{- end }}
                  name: {{ $.Values.ingress.protocol }}-ingress
                {{- end }}
            {{- end }}
      {{- end }}
---
{{- end }}
{{- end }}
{{- end }}
